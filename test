-- Improved Venyx UI Library randomizer that works more reliably
-- This version modifies the library at a more fundamental level

-- Function to generate random names
local function randomString(length)
    local chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
    local result = ""
    math.randomseed(tick())
    for i = 1, length or math.random(5, 10) do
        result = result .. chars:sub(math.random(1, #chars), math.random(1, #chars))
    end
    return result
end

-- Create the randomized function names
local functionMap = {
    addToggle = randomString(),
    addButton = randomString(),
    addTextbox = randomString(),
    addKeybind = randomString(),
    addColorPicker = randomString(),
    addSlider = randomString(),
    addDropdown = randomString()
}

-- Save the original HttpGet function
local originalHttpGet = game.HttpGet

-- Override HttpGet to modify the Venyx library code when it's downloaded
game.HttpGet = function(self, url, cache)
    local content = originalHttpGet(self, url, cache)
    
    -- Check if this is the Venyx library
    if url:find("Venyx%-UI%-Library") or url:find("venyx") then
        print("Detected Venyx library - randomizing function names...")
        
        -- Replace function names in the library code
        for origFunc, randomFunc in pairs(functionMap) do
            -- Make sure to only replace the exact function name by including boundaries
            content = content:gsub("function%s+section:" .. origFunc, "function section:" .. randomFunc)
            content = content:gsub("section%." .. origFunc, "section." .. randomFunc)
            content = content:gsub("section:" .. origFunc, "section:" .. randomFunc)
            
            -- Also replace any direct usage of these functions
            content = content:gsub(":" .. origFunc .. "%(", ":" .. randomFunc .. "(")
            content = content:gsub("%." .. origFunc .. "%(", "." .. randomFunc .. "(")
        end
        
        print("Venyx library functions have been randomized")
    end
    
    return content
end

-- Function to get the randomized name for a function
local function getRandomFuncName(originalName)
    return functionMap[originalName] or originalName
end

-- Return the function map so it can be used
return {
    getRandomName = getRandomFuncName,
    functionMap = functionMap
}
